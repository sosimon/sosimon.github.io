<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simon So</title>
    <link>https://sosimon.github.io/</link>
    <description>Recent content on Simon So</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 25 May 2017 09:43:48 -0700</lastBuildDate>
    
	<atom:link href="https://sosimon.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS Lambda and API Gateway Example (Part 1)</title>
      <link>https://sosimon.github.io/blog/aws-lambda-and-api-gateway-example-part-1/</link>
      <pubDate>Thu, 25 May 2017 09:43:48 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/aws-lambda-and-api-gateway-example-part-1/</guid>
      <description>In the previous post, I wrote briefly about AWS Lambda and serverless computing in general. In this post, I&amp;rsquo;ll go through the creation and setup with a simple Lambda function, and hook it up to a public REST API using API Gateway. This example pretty much as simple as it can get, so while it does not do anything really useful, it should provide a taste of what it takes to set things up.</description>
    </item>
    
    <item>
      <title>Serverless and AWS Lambda</title>
      <link>https://sosimon.github.io/blog/serverless-and-aws-lambda/</link>
      <pubDate>Fri, 21 Apr 2017 20:57:22 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/serverless-and-aws-lambda/</guid>
      <description>Serverless compute and architecture has been all gaining a lot attention lately, and AWS, once again, is leading the charge with the introduction of AWS Lambda a few years ago. The basic idea is that instead of the traditional model where you run an application on a compute and pay for 100% of the time that the compute is running, regardless of whether your application is actually serving traffic, you refactor your application into Lambda functions which respond to requests on-demand.</description>
    </item>
    
    <item>
      <title>Setting up your own private VPN on Google Cloud</title>
      <link>https://sosimon.github.io/blog/setting-up-your-own-private-vpn-on-google-cloud/</link>
      <pubDate>Sat, 05 Nov 2016 21:54:03 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/setting-up-your-own-private-vpn-on-google-cloud/</guid>
      <description>Why would I want to roll my own VPN, you ask? A couple reasons:
 If you frequent coffee shops, or airports, and want a little extra security when using open, un-protected wifi networks If you want to mask your IP address for whatever reason Rolling your own could be cheaper than going with a commerical solution. All you need is a small Linux VM with a cloud provider, and the big players usually have free trials.</description>
    </item>
    
    <item>
      <title>Go: static file server</title>
      <link>https://sosimon.github.io/blog/go-static-file-server/</link>
      <pubDate>Mon, 10 Oct 2016 21:02:33 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/go-static-file-server/</guid>
      <description>I started learning Go about 3 months ago, back in July. One of the things that struck me early on was how easy, accessible, and fun it was, especially when it came to doing things on the web.
At work last week, there was a situation where an emergency firewall and router replacement would have interrupted communication to a static file server that we depedended on for CI. The solution was this:</description>
    </item>
    
    <item>
      <title>TIL: ternary in bash</title>
      <link>https://sosimon.github.io/blog/til-ternary-in-bash/</link>
      <pubDate>Sat, 08 Oct 2016 10:10:38 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/til-ternary-in-bash/</guid>
      <description>I have been working with shell scripts for 4-5 years now, and I only recently saw, for the first time, someone shortcut the classic if/else/then statements:
[ $condition == &amp;#34;true&amp;#34; ] &amp;amp;&amp;amp; echo &amp;#34;true&amp;#34; || echo &amp;#34;false&amp;#34; It took me a few minutes of staring at it to make sure it works the way I think it works.
Having seen this though, I am of the opinion that it&amp;rsquo;s probably better to be a bit more verbose:</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://sosimon.github.io/about/</link>
      <pubDate>Fri, 07 Oct 2016 17:44:29 -0700</pubDate>
      
      <guid>https://sosimon.github.io/about/</guid>
      <description>Simon said so.</description>
    </item>
    
    <item>
      <title>First!</title>
      <link>https://sosimon.github.io/blog/first/</link>
      <pubDate>Fri, 07 Oct 2016 12:46:55 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/first/</guid>
      <description>Hopefully, first of many!</description>
    </item>
    
  </channel>
</rss>
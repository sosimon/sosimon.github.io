<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog-rss on Simon So</title>
    <link>https://sosimon.github.io/blog/index.xml</link>
    <description>Recent content in Blog-rss on Simon So</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 10 Oct 2016 21:02:33 -0700</lastBuildDate>
    <atom:link href="https://sosimon.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Go: static file server</title>
      <link>https://sosimon.github.io/blog/go-static-file-server/</link>
      <pubDate>Mon, 10 Oct 2016 21:02:33 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/go-static-file-server/</guid>
      <description>&lt;p&gt;I started learning Go about 3 months ago, back in July. One of the things that struck me was how easy, accessible, and fun it was, especially when it came to doing things on the web.&lt;/p&gt;

&lt;p&gt;At work last week, there was a situation where an emergency firewall and router replacement would have interrupted communication to a static file server that we depedended on for CI. The solution was this:&lt;/p&gt;
package main

import &#34;net/http&#34;

func main() {
    http.ListenAndServe(&#34;:8080&#34;, http.FileServer(http.Dir(&#34;/app/mirror&#34;)))
}

&lt;p&gt;plus a scrach Docker container:&lt;/p&gt;
FROM scratch
ADD main /

CMD [&#34;/main&#34;]

&lt;p&gt;We spun up a new VM and deployed in less time than it took to SCP files over to the new mirror. Unfortunately, we ended up not using it becuase of some other reasons, but at least we didn&amp;rsquo;t waste too much time, and I thought it was still pretty neat to be able to do that so quickly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TIL: ternary in bash</title>
      <link>https://sosimon.github.io/blog/til-ternary-in-bash/</link>
      <pubDate>Sat, 08 Oct 2016 10:10:38 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/til-ternary-in-bash/</guid>
      <description>&lt;p&gt;I have been working with shell scripts for 4-5 years now, and I only recently saw, for the first time, someone shortcut the classic if/else/then statements:&lt;/p&gt;
[ $condition == &#34;true&#34; ] &amp;&amp; echo &#34;true&#34; || echo &#34;false&#34;

&lt;p&gt;It took me a few minutes of staring at it to make sure it works the way I think it works.&lt;/p&gt;

&lt;p&gt;Having seen this though, I am of the opinion that it&amp;rsquo;s probably better to be a bit more verbose:&lt;/p&gt;
if [ $condition == &#34;true&#34; ]; then
  echo &#34;true&#34;
else
  echo &#34;false&#34;
fi

&lt;p&gt;I think it&amp;rsquo;s more natural, easier to read and understand, better for the next guy/gal who needs to read and decipher your script.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First!</title>
      <link>https://sosimon.github.io/blog/first/</link>
      <pubDate>Fri, 07 Oct 2016 12:46:55 -0700</pubDate>
      
      <guid>https://sosimon.github.io/blog/first/</guid>
      <description>&lt;p&gt;Hopefully, first of many!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>